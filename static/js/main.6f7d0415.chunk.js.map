{"version":3,"sources":["serviceWorker.js","data.js","index.js","svg-draw.js"],"names":["Boolean","window","location","hostname","match","cs198","id","index","image","overlay","text","modalText","stanford1","carouselData","year","lanes","connections","Bubble","React","forwardRef","props","ref","shouldDisplay","dimensions","maxWidth","styles","left","height","width","className","title","data-tooltip","style","onClick","openModal","body","src","alt","Lane","maxHeight","top","bubbles","map","bubble","key","refs","ProjectModal","Modal","show","displayModal","onHide","handleClose","size","centered","Header","closeButton","Title","modalContent","Body","ProjectCarousel","useState","slideIndex","setSlideIndex","setDisplayModal","setModalContent","content","data","carouselItemData","laneArr","lane","undefined","Error","JSON","stringify","createRef","innerHeight","innerWidth","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","_","removeEventListener","document","getElementsByClassName","textContent","href","slide","canvasDOM","getElementById","forEach","start","end","slideRefs","elem","appendChild","leftRef","rightRef","strokeColor","strokeWidth","tension","findAbsolutePosition","htmlElement","x","y","el","offsetParent","offsetLeft","offsetTop","leftPos","current","rightPos","distanceFromTop","x1","y1","x2","y2","delta","hx1","hy1","hx2","hy2","path","namespace","shape","createElementNS","setAttribute","drawSVGLine","length","arr","Carousel","interval","onSlide","Item","Caption","i","ReactDOM","render","querySelector","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6f7d0415.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","const cs198 = {\n  id: 'cs198',\n  index: 2,\n  image: 'cs198.png',\n  overlay: 'blue',\n  text: 'CS198',\n  modalText:\n    'I was a section leader for CS 106A and CS106B, the introductory CS courses at Stanford!',\n}\n\nconst stanford1 = {\n  id: 'stanford-1',\n  index: 1,\n  image: 'stanford.jpg',\n  overlay: 'red',\n  text: 'Stanford',\n  modalText:\n    'This is the university where I have spent four years learning, growing, and thinking! Here, I have met some of the most incredible people I have ever known, and have worked with esteemed professors and researchers.',\n}\n\nconst stanford2 = {\n  id: 'stanford-2',\n  index: 1,\n  image: 'stanford2.jpg',\n  overlay: 'red',\n  text: 'Stanford',\n  modalText:\n    'This is the university where I have spent four years learning, growing, and thinking! Here, I have met some of the most incredible people I have ever known, and have worked with esteemed professors and researchers.',\n}\n\nexport const carouselData = [\n  {\n    year: 2017,\n    lanes: [\n      [\n        {\n          id: 'edutech',\n          index: 2,\n          image: 'edutech.jpg',\n          overlay: 'green',\n          text: 'EduTech',\n          modalText:\n            'I worked on this project with my teammates in EE 15N: The Art & Science of Engineering Design. Our goal was to make a website for 8th grade Social Studies teachers to use to incorporate more project-based learning in their classes.',\n        },\n      ],\n      [\n        {\n          id: 'marker-0',\n          index: 0,\n          image: 'marker',\n          text: '',\n        },\n        stanford1,\n        {\n          id: 'marker-1',\n          index: 2,\n          image: 'marker',\n          text: 'Winter Quarter',\n        },\n        {\n          id: 'marker-2',\n          index: 3,\n          image: 'marker',\n          text: 'Spring Quarter',\n        },\n        {\n          id: 'openproof',\n          index: 4,\n          image: 'openproof.jpg',\n          overlay: 'green',\n          text: 'Openproof',\n          modalText:\n            'I learned a ton about web development and about working in a small group to accelerate the new version of a 10+ year old Logic curriculum website.',\n        },\n        {\n          id: 'marker-3',\n          index: 5,\n          image: 'marker',\n          text: 'Summer Quarter',\n        },\n      ],\n      [],\n      [\n        { ...cs198, index: 3 },\n        {\n          id: 'marker-4',\n          index: 4,\n          image: 'marker',\n          text: 'Summer Quarter',\n        },\n        {\n          id: 'marker-5',\n          index: 5,\n          image: 'marker',\n          text: '',\n        },\n      ],\n    ],\n    connections: [\n      ['stanford-1', 'openproof'],\n      ['stanford-1', 'edutech'],\n      ['marker-0', 'stanford-1'],\n      ['openproof', 'marker-3'],\n      ['marker-1', 'cs198'],\n      ['cs198', 'marker-5'],\n    ],\n  },\n  {\n    year: 2018,\n    lanes: [\n      [\n        {\n          id: 'wolfbot',\n          index: 3,\n          image: 'wolfbot.jpg',\n          overlay: 'yellow',\n          text: 'WolfBot',\n          modalText:\n            'The most exciting project I have worked on for CS 221: Artificial Intelligence. Working with my project partner Harry Sha, we created two game-playing AIs that could navigate a social game of lies and deceit, designing and adapting machine learning algorithms to understand the game and choose optimal statements. The game solver determines which players are lying using consistent statement subsets, and the Wolf AI uses Expectimax + Reinforcement Learning to choose the best lie to evade detection.',\n        },\n      ],\n      [\n        {\n          id: 'marker-0',\n          index: 0,\n          image: 'marker',\n          text: '',\n        },\n        stanford2,\n        {\n          id: 'marker-1',\n          index: 2,\n          image: 'marker',\n          text: 'Winter Quarter',\n        },\n        {\n          id: 'marker-2',\n          index: 3,\n          image: 'marker',\n          text: 'Spring Quarter',\n        },\n        {\n          id: 'intuit',\n          index: 4,\n          image: 'intuit.png',\n          overlay: 'blue',\n          text: 'Intuit',\n          modalText:\n            'I worked here in the summer of 2018, working in the Payroll team (100+ people), to create a UI automation framework that could be used by all Payroll subteams for regression testing! I developed an automated UI test framework for Payroll teams, designed reliable click/ input functions using XPath selectors, integrated framework with Jenkins and backend service tests, and built a dashboard app to aggregate build results using React/Node.js.',\n        },\n        {\n          id: 'marker-3',\n          index: 5,\n          image: 'marker',\n          text: '',\n        },\n      ],\n      [\n        {\n          id: 'vhil',\n          index: 2,\n          image: 'vhil.jpg',\n          overlay: 'red',\n          text: 'VHIL',\n          modalText:\n            'I created VR worlds for the Virtual Human Interaction Lab to use in PhD research, implemented a multiplayer VR full-body experience using Unity, SteamVR, and Photon, and set up online VR studies using WebVR and Django to reach more participants.',\n        },\n        {\n          id: 'marker-4',\n          index: 3,\n          image: 'marker',\n          text: 'Spring Quarter',\n        },\n      ],\n      [\n        {\n          id: 'marker-5',\n          index: 0,\n          image: 'marker',\n          text: '',\n        },\n        cs198,\n        {\n          id: 'marker-6',\n          index: 5,\n          image: 'marker',\n          text: '',\n        },\n      ],\n    ],\n    connections: [\n      ['marker-0', 'stanford-2'],\n      ['stanford-2', 'intuit'],\n      ['intuit', 'marker-3'],\n      ['stanford-2', 'vhil'],\n      ['vhil', 'marker-4'],\n      ['marker-4', 'intuit'],\n      ['marker-1', 'wolfbot'],\n      ['marker-5', 'cs198'],\n      ['cs198', 'marker-6'],\n    ],\n  },\n  {\n    year: 2019,\n    lanes: [\n      [\n        {\n          id: 'self-driving',\n          index: 3,\n          image: 'self-driving.jpg',\n          overlay: 'green',\n          text: 'Self-Driving',\n          modalText:\n            'My project for CS 231N: Convolutional Neural Networks for Visual Recognition. For our final project, my friend Woody and I trained a car simulator model to drive by responding to high-level controls (e.g. take the next available left turn). We used branched ResNet architecture to predict throttle and steering angle, and the final model car stays in its lane, completes turns, and follows directions.',\n        },\n      ],\n      [\n        {\n          id: 'marker-0',\n          index: 0,\n          image: 'marker',\n          text: '',\n        },\n        stanford1,\n        {\n          id: 'marker-1',\n          index: 2,\n          image: 'marker',\n          text: 'Winter Quarter',\n        },\n        {\n          id: 'marker-2',\n          index: 3,\n          image: 'marker',\n          text: 'Spring Quarter',\n        },\n        {\n          id: 'bridgewater',\n          index: 4,\n          image: 'bridgewater.png',\n          overlay: 'red',\n          text: 'Bridgewater',\n          modalText:\n            'Developed features for DSL built on Scala used to author investment logic, on a feature that explains claims in financial reports and generates systematic reports with new data. Used React/Redux, a custom Scala backend, and a PostgreSQL database.',\n        },\n        {\n          id: 'marker-3',\n          index: 5,\n          image: 'marker',\n          text: '',\n        },\n      ],\n      [],\n      [\n        {\n          id: 'marker-4',\n          index: 0,\n          image: 'marker',\n          text: '',\n        },\n        {\n          id: 'marker-5',\n          index: 1,\n          image: 'marker',\n          text: 'Fall Quarter',\n        },\n        cs198,\n      ],\n    ],\n    connections: [\n      ['marker-0', 'stanford-1'],\n      ['stanford-1', 'bridgewater'],\n      ['marker-4', 'cs198'],\n      ['marker-1', 'self-driving'],\n      ['bridgewater', 'marker-3'],\n      ['cs198', 'bridgewater'],\n    ],\n  },\n  {\n    year: 2020,\n    lanes: [\n      [],\n      [\n        {\n          id: 'marker-0',\n          index: 0,\n          image: 'marker',\n          text: '',\n        },\n        stanford1,\n        {\n          id: 'marker-1',\n          index: 2,\n          image: 'marker',\n          text: 'Winter Quarter',\n        },\n        {\n          id: 'marker-2',\n          index: 3,\n          image: 'marker',\n          text: 'Spring Quarter',\n        },\n        {\n          id: 'robinhood',\n          index: 4,\n          image: 'robinhood.png',\n          overlay: 'green',\n          text: 'Robinhood',\n          modalText:\n            'For the summer of my Senior year, I interned at Robinhood using the COVID-19 pandemic. Over the summer, I designed a new checkout flow backend API to place trades via ACH transfer on the Robinhood app, implemented the backend API in the Django backend and the frontend in the web app using React/Redux, and then integrated with Bonfire, a unified HTTP proxy layer.',\n        },\n        {\n          id: 'marker-3',\n          index: 5,\n          image: 'marker',\n          text: '',\n        },\n      ],\n      [],\n      [\n        cs198,\n        {\n          id: 'marker-4',\n          index: 3,\n          image: 'marker',\n          text: 'Fall Quarter',\n        },\n      ],\n    ],\n    connections: [\n      ['marker-0', 'stanford-1'],\n      ['stanford-1', 'robinhood'],\n      ['marker-0', 'cs198'],\n      ['cs198', 'marker-4'],\n      ['marker-4', 'robinhood'],\n    ],\n  },\n]\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport Carousel from 'react-bootstrap/Carousel'\nimport Modal from 'react-bootstrap/Modal'\n\nimport { carouselData } from './data'\nimport { drawSVGLine } from './svg-draw'\n\nconst Bubble = React.forwardRef((props, ref) => {\n  const shouldDisplay = props.index === 0 || props.index === props.dimensions.maxWidth ? 0 : ''\n  const styles = {\n    left: `${(props.index / props.dimensions.maxWidth) * 100}%`,\n    height: shouldDisplay,\n    width: shouldDisplay,\n  }\n  return props.image === 'marker' ? (\n    <div\n      id={`marker-${props.index}`}\n      className=\"marker\"\n      ref={ref}\n      title={props.text}\n      data-tooltip={props.text}\n      style={styles}\n    ></div>\n  ) : (\n    <div\n      id={props.image}\n      ref={ref}\n      className=\"bubble\"\n      onClick={props.openModal({ title: props.text, body: props.modalText })}\n      style={styles}\n    >\n      <img src={`img/projects/${props.image}`} alt={props.text} />\n      <span className={`overlay ${props.overlay}`}>\n        <p className=\"text\">{props.text}</p>\n      </span>\n    </div>\n  )\n})\n\nfunction Lane(props) {\n  const styles = {\n    height: `${100 / props.dimensions.maxHeight}%`,\n  }\n  return (\n    <div className={props.top ? 'lane top' : 'lane'} style={styles}>\n      {props.bubbles.map((bubble) => (\n        <Bubble\n          key={bubble.id}\n          ref={props.refs[bubble.id]}\n          openModal={props.openModal}\n          dimensions={props.dimensions}\n          {...bubble}\n        />\n      ))}\n    </div>\n  )\n}\n\nfunction ProjectModal(props) {\n  return (\n    <Modal show={props.displayModal} onHide={props.handleClose} size=\"lg\" centered>\n      <Modal.Header closeButton>\n        <Modal.Title>{props.modalContent.title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>{props.modalContent.body}</p>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nfunction ProjectCarousel(props) {\n  const [slideIndex, setSlideIndex] = React.useState(0)\n  const [displayModal, setDisplayModal] = React.useState(false)\n  const [modalContent, setModalContent] = React.useState({})\n  const handleClose = () => setDisplayModal(false)\n  const openModal = (content) => () => {\n    setModalContent(content)\n    setDisplayModal(true)\n  }\n\n  const [refs] = React.useState(() => {\n    let refs = {}\n    for (const carouselItemData of props.data) {\n      refs[carouselItemData.year] = {}\n      for (const laneArr of carouselItemData.lanes) {\n        for (const lane of laneArr) {\n          if (lane.id === undefined)\n            throw new Error(`Undefined carousel data id: ${JSON.stringify(lane)}`)\n          if (lane.id in refs[carouselItemData.year])\n            throw new Error(`Duplicate carousel data id: ${lane.id}`)\n          refs[carouselItemData.year][lane.id] = React.createRef()\n        }\n      }\n    }\n    return refs\n  })\n\n  const [windowDimensions, setWindowDimensions] = React.useState({\n    height: window.innerHeight,\n    width: window.innerWidth,\n  })\n  React.useEffect(() => {\n    function handleResize() {\n      setWindowDimensions({\n        height: window.innerHeight,\n        width: window.innerWidth,\n      })\n    }\n    window.addEventListener('resize', handleResize)\n    return (_) => {\n      window.removeEventListener('resize', handleResize)\n    }\n  })\n\n  // code to run after render goes here\n  React.useEffect(() => {\n    // Remove all SVG elements\n    for (const slide of document.getElementsByClassName('svg-canvas')) {\n      slide.textContent = ''\n    }\n\n    for (const arrow of [\n      ...document.getElementsByClassName('carousel-control-prev'),\n      ...document.getElementsByClassName('carousel-control-next'),\n    ]) {\n      arrow.href = '#projects'\n    }\n\n    // Draw new SVG elements\n    const slide = props.data[slideIndex]\n    const canvasDOM = document.getElementById(`svg-canvas-${slide.year}`)\n    slide.textContent = ''\n    slide.connections.forEach(([start, end]) => {\n      const slideRefs = refs[slide.year]\n      for (const elem of [start, end]) {\n        if (!(elem in slideRefs)) throw new Error(`Invalid carousel data id: ${elem}`)\n      }\n      canvasDOM.appendChild(drawSVGLine(slideRefs[start], slideRefs[end], windowDimensions))\n    })\n  })\n\n  const dimensions = {}\n  for (const carouselItemData of props.data) {\n    dimensions[carouselItemData.year] = {\n      maxHeight: carouselItemData.lanes.length,\n      maxWidth: 0,\n    }\n    for (const arr of carouselItemData.lanes) {\n      for (const bubble of arr) {\n        if (bubble.index > dimensions[carouselItemData.year].maxWidth) {\n          dimensions[carouselItemData.year].maxWidth = bubble.index\n        }\n      }\n    }\n  }\n\n  return (\n    <>\n      <h1>Projects</h1>\n      <Carousel id=\"project\" interval={null} onSlide={setSlideIndex}>\n        {props.data.map((slide) => (\n          <Carousel.Item key={slide.year}>\n            <svg id={`svg-canvas-${slide.year}`} className=\"svg-canvas\"></svg>\n            <img src=\"img/home/stars.jpg\" alt=\"stars\"></img>\n            <Carousel.Caption>\n              <h2 className=\"year\">{slide.year}</h2>\n              {slide.lanes.map((lane, i) => (\n                <Lane\n                  refs={refs[slide.year]}\n                  key={i}\n                  top={i === 0}\n                  bubbles={lane}\n                  openModal={openModal}\n                  dimensions={dimensions[slide.year]}\n                />\n              ))}\n            </Carousel.Caption>\n          </Carousel.Item>\n        ))}\n      </Carousel>\n      <ProjectModal\n        displayModal={displayModal}\n        modalContent={modalContent}\n        handleClose={handleClose}\n      />\n    </>\n  )\n}\n\n// TODO: Add <React.StrictMode> here when react bootstrap is ready.\nReactDOM.render(\n  <>\n    <ProjectCarousel data={carouselData} />\n  </>,\n  document.querySelector('#projects'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","export function drawSVGLine(\n  leftRef,\n  rightRef,\n  dimensions,\n  strokeColor = 'lightseagreen',\n  strokeWidth = 10,\n  tension = 0.6,\n) {\n  function findAbsolutePosition(htmlElement) {\n    let x = 0\n    let y = 0\n    for (let el = htmlElement; el != null; el = el.offsetParent) {\n      x += el.offsetLeft\n      y += el.offsetTop\n    }\n    return { x, y }\n  }\n  const leftPos = findAbsolutePosition(leftRef.current)\n  const rightPos = findAbsolutePosition(rightRef.current)\n\n  // Projects page is 3rd from the top\n  const distanceFromTop = 3 * dimensions.height\n  const x1 = leftPos.x\n  const y1 = leftPos.y - distanceFromTop\n  const x2 = rightPos.x\n  const y2 = rightPos.y - distanceFromTop\n\n  const delta = (x2 - x1) * tension\n  const hx1 = x1 + delta\n  const hy1 = y1\n  const hx2 = x2 - delta\n  const hy2 = y2\n  const path = `M ${x1} ${y1} C ${hx1} ${hy1} ${hx2} ${hy2} ${x2} ${y2}`\n\n  const namespace = 'http://www.w3.org/2000/svg'\n  const shape = document.createElementNS(namespace, 'path')\n  shape.setAttribute('d', path)\n  shape.setAttribute('stroke', strokeColor)\n  shape.setAttribute('class', 'path')\n  shape.setAttribute('style', 'fill: none;')\n  shape.setAttribute('stroke-width', strokeWidth)\n  return shape\n}\n"],"sourceRoot":""}